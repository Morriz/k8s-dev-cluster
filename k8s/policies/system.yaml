---
# Requirements:
#
# - deny all ingress and egress
# - allow all egress to dns
# - allow all ingress to and from nginx on port 80
# - allow all ingress to and egress from nginx to public http(s) on port 80 and 443
# - temporary: allow all ingress/egress between pods and internal services
#
# @todo: allow ingress from nginx for public facing https services: lego, drone, registry
# @todo: specify finegrained ingress/egress between services
# @todo: experiment with ip whitelisting for external services
---
# allow egress to kube-dns
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns-egress
  namespace: system
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  - to:
    ports:
    - protocol: UDP
      port: 53
---
# nginx:
#
# - allow ingress from internal services and world on port 80, 443
# - allow egress to internal services and world on port 80, 443
#
# @todo: narrow internal services
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: access-nginx
  namespace: system
spec:
  podSelector:
    matchLabels:
      app: nginx-ingress
      component: controller
  ingress:
  - from: []
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
  egress:
  - to:
    - namespaceSelector: {}
  - to: []
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
---
# Drone server:
#
# - allow egress to github.com on port 443
# - allow nginx ingress > drone server > drone agent
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-drone-server-ingress-egress
  namespace: system
spec:
  podSelector:
    matchLabels:
      app: drone-drone-server
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: nginx-ingress
    - namespaceSelector:
        matchLabels:
          purpose: public-ingress
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: drone-drone-agent
#    ports:
#    - protocol: gRPC
#      port: 9000
---
# Drone agent:
#
# - allow egress to github.com on port 443
# - allow drone server ingress > drone agent > drone server egress
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-drone-agent-ingress-egress
  namespace: team-frontend
spec:
  podSelector:
    matchLabels:
      app: drone-drone-agent
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: drone-drone-server
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: drone-drone-server
#    ports:
#    - protocol: gRPC
#      port: 9000
#---
## temporary:
##
## allow all ingress/egress between pods and internal services
#apiVersion: networking.k8s.io/v1
#kind: NetworkPolicy
#metadata:
#  name: allow-inter-pod
#  namespace: system
#spec:
#  podSelector: {}
#  ingress:
#  - from:
#    - podSelector: {}
#  egress:
#  - to:
#    - podSelector: {}
