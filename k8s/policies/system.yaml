---
# allow cluster > kubernetes api
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-kube-lego
  namespace: system
spec:
  podSelector:
    matchLabels:
      app: kube-lego
  ingress:
  - from: []
#    - podSelector:
#        matchLabels:
#          app: nginx-ingress
#          component: controller
    ports:
    # lego needs port 8080 open to receive incoming from letsencrypt
    - port: 8080
      protocol: TCP
  egress:
  - to: []
    ports:
    # lego tests the domains for reachability on port 80
    - port: 80
      protocol: TCP
    # and asks letsencrypt for certs
    - port: 443
      protocol: TCP
---
# nginx:
#
# - allow ingress from internal services and world on port 80, 443
# - allow egress to internal services on port 80, 443
#
# @todo: narrow internal services
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-access-nginx
  namespace: system
spec:
  podSelector:
    matchLabels:
      app: nginx-ingress
      component: controller
  ingress:
  - from:
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
  egress:
  - to:
    - ipBlock:
        cidr: 192.168.0.0/16
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
---
# Drone server:
#
# - allow egress to github.com on port 443
# - allow nginx ingress > drone server > drone agent
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-drone-server
  namespace: system
spec:
  podSelector:
    matchLabels:
      app: drone
      component: server
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: nginx-ingress
          component: controller
  - from:
    - podSelector:
        matchLabels:
          app: drone
          component: agent
    ports:
    - protocol: TCP
      port: 9000
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: drone
          component: agent
    ports:
    - protocol: TCP
      port: 9000
  # external traffic can't be limited to domains (yet), so rudimentary for now:
  - to:
    ports:
    - protocol: TCP
      port: 443
---
# Drone agent:
#
# - allow egress to github.com on port 443
# - allow drone server > drone agent > drone server
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-drone-agent
  namespace: system
spec:
  podSelector:
    matchLabels:
      app: drone
      component: agent
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: drone
          component: server
    ports:
    - protocol: TCP
      port: 9000
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: drone
          component: server
    ports:
    - protocol: TCP
      port: 9000
  # external traffic can't be limited to domains (yet), so rudimentary for now:
  - to:
    ports:
    - protocol: TCP
      port: 443
