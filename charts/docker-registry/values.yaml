replicas: 1
image:
  repository: registry
  tag: 2
  pullPolicy: IfNotPresent
annotations: {}
init:
  load: false
  type:
  branch:
  image:
    repository: centos
    tag: latest
  tarballURL:
persistentVolume:
  enabled: true
  accessModes:
    - ReadWriteOnce
  existingClaim: ""
  size: 20Gi
  ## docker-registry data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: "-"
  annotations: {}
  subPath: registry
localproxy:
  enabled: false
  port: 5000
  image:
    repository: gcr.io/google_containers/kube-registry-proxy
    tag: 0.4
    pullPolicy: IfNotPresent
service:
  http:
    externalPort: 80
  annotations: {}
ingress:
  enabled: false
  tls: true
  hostname: your.doma.in
  annotations:
    sidecar.istio.io/inject: 'false'
    kubernetes.io/ingress.class: nginx
#    kubernetes.io/ingress.class: istio
    kubernetes.io/tls-acme: 'true'
    ingress.kubernetes.io/rewrite-target: /
    ingress.kubernetes.io/proxy-body-size: 20m
proxy:
  enabled: false
  url: https://registry-1.docker.io
#  username: bla
#  password: bla

