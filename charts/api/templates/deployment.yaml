apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
{{ toYaml .Values.deployment.annotations | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
      annotations:
        pod.beta.kubernetes.io/init-containers: |-
          [
            {
              "name": "registry-listener",
              "image": "sequenceiq/alpine-dig",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh", "-c",
                "for i in {1..100}; do sleep 1; if dig {{ .Release.Name }}-docker-registry; then exit 0; fi; done; sleep 5"
              ]
            }
          ]
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.http.internalPort }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.http.internalPort }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.http.internalPort }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
