apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-server
  annotations:
{{ toYaml .Values.server.annotations | indent 4 }}
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- range $key, $value := .Values.server.annotations }}
        {{ $key }}: {{ $value }}
        {{- end }}
      labels:
        app: {{ template "fullname" . }}-server
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      serviceAccountName: {{ if .Values.rbac.create }}{{ template "fullname" . }}{{ else }}"{{ .Values.rbac.serviceAccountName }}"{{ end }}
      containers:
      - name: {{ template "fullname" . }}-server
        image: drone/drone:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: DRONE_HOST
        {{ if .Values.ingress.tls }}
          value: "https://{{ .Values.ingress.hostname }}"
        {{ else }}
          value: "http://{{ .Values.ingress.hostname }}"
        {{ end }}
        - name: DRONE_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: secret
        {{ range $key, $value := .Values.server.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{ end }}
        ports:
        - name: http
          containerPort: {{ .Values.service.http.internalPort }}
        readinessProbe:
          httpGet:
            path: /
            port: http
        resources:
{{ toYaml .Values.server.resources | indent 10 }}
        volumeMounts:
        - mountPath: /etc/ssl/certs/ca-certificates.crt
          name: certs
        - mountPath: /var/lib/drone
          subPath: "{{ .Values.persistentVolume.subPath }}"
          name: persistentdata
      volumes:
      - name: certs
        hostPath:
          path: /etc/ssl/certs/ca-certificates.crt
      - name: persistentdata
      {{- if .Values.persistentVolume.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistentVolume.existingClaim }}{{ .Values.persistentVolume.existingClaim }}{{- else }}{{ template "fullname" . }}{{- end }}
      {{- else }}
        emptyDir: {}
      {{- end -}}
